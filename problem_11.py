
"""
Largest product in a grid
https://projecteuler.net/problem=11
"""

# i converted all numbers to one line text by a windows form app with c# at VS2019C IDE
a = "08022297381500400075040507785212507791084949994017811857608717409843694804566200814931735579142993714067538830034913366552709523046011426924685601325671370236912231167151676389419236542240402866331380244732609903450244753353783684203517125032988128642367102638406759547066183864706726206802621220956394396308409166499421245558056673992697177878968314883489637221362309750076442045351400613397343133957817532822753167159403800462161409535692163905429635314755588824001754243629855786560048357189070544443744602158515417581980816805944769287392138652177704895540045208839735991607975732162626793327986688366887576220720346336746551232639353690442167338253911249472180846293240627636206936417230238834629969826759857404361620733529783190017431497148868116235705540170547183515469169233486143520189196748"

# next progress; insert every two-digits into a 20x20 matrice
m = np.zeros((20, 20), int)
count = -1  # counter for index
for i in range(20):
    for j in range(20):
        count += 1
        m[i, j] = int(a[count*2:count*2+2])

# now scan directions to find max value of four digits product
max = 0
f = 1

# horizontals & verticals
for i in range(17):
    for j in range(17):
        f = m[i, j] * m[i, j + 1] * m[i, j + 2] * m[i, j + 3]
        if f > max:
            max = f
        f = m[i, j] * m[i + 1, j] * m[i + 2, j] * m[i + 3, j]
        if f > max:
            max = f

# main diagonals
for i in range(17):
    f = m[i, i] * m[i+1, i+1] * m[i+2, i+2] * m[i+3, i+3]
    if f > max:
        max = f
    f = m[i, 19-i] * m[i+1, 18-i] * m[i+2, 17-i] * m[i+3, 16-i]
    if f > max:
        max = f

print(max)